---
import { currentLanguage } from '../stores/languageStore';
import { translations } from '../utils/translations';

// Initial language value for SSR
const initialLang = currentLanguage.get();

const services = [
  {
    id: "consulting",
    icon: 'ðŸ“Š'
  },
  {
    id: "transformation",
    icon: 'ðŸ’»'
  },
  {
    id: "management",
    icon: 'ðŸ“‹'
  }
];
---

<section class="py-20 bg-white" id="services-section">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 
        class="text-3xl font-bold text-gray-900"
        id="services-title"
      >
        Our Services
      </h2>
      <p 
        class="mt-4 text-lg text-gray-600"
        id="services-description"
      >
        Comprehensive solutions for your business needs
      </p>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
      {services.map(service => (
        <div class="bg-gray-50 p-8 rounded-lg text-center">
          <div class="text-4xl mb-4">{service.icon}</div>
          <h3 
            class="text-xl font-bold mb-4"
            id={`service-title-${service.id}`}
          >
            Loading...
          </h3>
          <p 
            class="text-gray-600"
            id={`service-description-${service.id}`}
          >
            Loading...
          </p>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  import { currentLanguage } from '../stores/languageStore';
  import { translations } from '../utils/translations';

  function updateContent(lang) {
    const t = translations[lang].services;

    // Update header content
    document.getElementById('services-title').textContent = t.title;
    document.getElementById('services-description').textContent = t.description;

    // Update service items
    t.items.forEach(service => {
      document.getElementById(`service-title-${service.id}`).textContent = service.title;
      document.getElementById(`service-description-${service.id}`).textContent = service.description;
    });
  }

  function initServices() {
    // Initial render
    updateContent(currentLanguage.get());

    // Listen for language changes
    const unsubscribe = currentLanguage.subscribe(newLang => {
      updateContent(newLang);
    });

    // Cleanup subscription when component is destroyed
    return unsubscribe;
  }

  // Handle initial load and page transitions
  document.addEventListener('astro:page-load', () => {
    const unsubscribe = initServices();
    
    // Cleanup on page transition
    document.addEventListener('astro:before-preparation', () => {
      unsubscribe();
    }, { once: true });
  });
</script>