---
import { Image } from 'astro:assets';
import { currentLanguage } from '../stores/languageStore';
import { translations } from '../utils/translations';

// Initial language value for SSR
const initialLang = currentLanguage.get();

const stats = [
  { id: "tkdn", value: "TKDN" },
  { id: "iso", value: "ISO" },
  { id: "arm", value: "ARM" },
  { id: "support", value: "24/7" }
];
---

<section class="relative min-h-[calc(100vh-4rem)] flex items-center justify-center overflow-hidden py-16 sm:py-20 lg:py-32" id="hero-section">
  <!-- Background effects remain unchanged -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute inset-0 bg-gradient-radial from-forlux-orange-primary/20 to-transparent opacity-30 blur-3xl"></div>
    <div class="absolute -top-40 -right-40 w-80 h-80 bg-forlux-orange-primary rounded-full mix-blend-multiply filter blur-3xl opacity-10 animate-blob"></div>
    <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-forlux-green-primary rounded-full mix-blend-multiply filter blur-3xl opacity-10 animate-blob animation-delay-2000"></div>
  </div>

  <div class="container relative z-10 px-4 mx-auto">
    <div class="text-center max-w-4xl mx-auto">
      <div class="relative mb-6 sm:mb-8 inline-block" data-aos="fade-down">
        <div class="absolute inset-0 bg-forlux-orange-gradient blur-xl opacity-30"></div>
        <span 
          class="relative inline-block px-4 py-2 text-sm sm:text-base font-semibold text-forlux-orange-primary bg-forlux-orange-primary/10 rounded-full border border-forlux-orange-primary/20"
          id="hero-badge"
        >
          Loading...
        </span>
      </div>

      <h1 
        class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold mb-6 sm:mb-8 text-white leading-tight"
        data-aos="fade-up"
        data-aos-delay="100"
      >
        <span 
          class="bg-clip-text text-transparent bg-forlux-orange-gradient"
          id="hero-title-1"
        >
          Loading...
        </span>
        <br class="hidden sm:block" />
        <span id="hero-title-2">Loading...</span>
      </h1>

      <p 
        class="text-lg sm:text-xl text-gray-300 mb-8 sm:mb-12 max-w-2xl mx-auto leading-relaxed"
        data-aos="fade-up"
        data-aos-delay="200"
        id="hero-description"
      >
        Loading...
      </p>

      <div 
        class="flex flex-col sm:flex-row gap-4 justify-center items-center"
        data-aos="fade-up"
        data-aos-delay="300"
      >
        <a href="/products" class="w-full sm:w-auto">
          <div class="gradient-border">
            <span 
              class="block px-6 sm:px-8 py-3 bg-[#1a1f2d] rounded-lg font-semibold text-white hover:bg-[#1a1f2d]/80 transition-all duration-300"
              id="hero-cta-primary"
            >
              Loading...
            </span>
          </div>
        </a>
        <a 
          href="/contact" 
          class="w-full sm:w-auto px-6 sm:px-8 py-3 rounded-lg font-semibold text-white border border-forlux-orange-primary/20 hover:bg-forlux-orange-primary/5 transition-all duration-300"
          id="hero-cta-secondary"
        >
          Loading...
        </a>
      </div>

      <div 
        class="mt-16 sm:mt-20 grid grid-cols-2 sm:grid-cols-4 gap-4 sm:gap-8 max-w-3xl mx-auto"
        data-aos="fade-up"
        data-aos-delay="400"
      >
        {stats.map((stat, index) => (
          <div 
            class="glass-card p-4 sm:p-6 hover:scale-105 transition-transform duration-300"
            data-aos="zoom-in"
            data-aos-delay={500 + (index * 100)}
          >
            <div class="text-xl sm:text-2xl font-bold text-forlux-orange-primary mb-2">{stat.value}</div>
            <div 
              class="text-xs sm:text-sm text-gray-300"
              id={`stat-${stat.id}-label`}
            >
              Loading...
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
  import { currentLanguage } from '../stores/languageStore';
  import { translations } from '../utils/translations';

  function updateContent(lang) {
    const t = translations[lang].hero;

    // Update main content
    document.getElementById('hero-badge').textContent = t.badge;
    document.getElementById('hero-title-1').textContent = t.title1;
    document.getElementById('hero-title-2').textContent = t.title2;
    document.getElementById('hero-description').textContent = t.description;

    // Update CTAs
    document.getElementById('hero-cta-primary').textContent = t.cta.primary;
    document.getElementById('hero-cta-secondary').textContent = t.cta.secondary;

    // Update stats
    Object.keys(t.stats).forEach(statId => {
      document.getElementById(`stat-${statId}-label`).textContent = t.stats[statId];
    });
  }

  function initHero() {
    // Initial render
    updateContent(currentLanguage.get());

    // Listen for language changes
    const unsubscribe = currentLanguage.subscribe(newLang => {
      updateContent(newLang);
    });

    // Cleanup subscription when component is destroyed
    return unsubscribe;
  }

  // Handle initial load and page transitions
  document.addEventListener('astro:page-load', () => {
    const unsubscribe = initHero();
    
    // Cleanup on page transition
    document.addEventListener('astro:before-preparation', () => {
      unsubscribe();
    }, { once: true });
  });
</script>

<style>
  .gradient-border {
    background: linear-gradient(45deg, #F2C734, #EF6D21, #E41018);
    padding: 1px;
    border-radius: 0.5rem;
  }

  @keyframes blob {
    0%, 100% { transform: translate(0, 0) scale(1); }
    25% { transform: translate(20px, -20px) scale(1.1); }
    50% { transform: translate(-20px, 20px) scale(0.9); }
    75% { transform: translate(20px, 20px) scale(1.1); }
  }

  .animate-blob {
    animation: blob 10s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }
</style>