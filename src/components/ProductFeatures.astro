---
import { currentLanguage } from '../stores/languageStore';
import { translations } from '../utils/translations';

// Get initial language for SSR
const initialLang = currentLanguage.get();

// Add translations to the existing translations object in utils/translations.js:
const content = translations[initialLang].products.features;
---

<section class="relative py-32">
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-gradient-radial from-forlux-green-primary/10 to-transparent opacity-30 blur-3xl"></div>
  </div>
  
  <div class="container mx-auto px-4 relative z-10">
    <div class="text-center mb-16" data-aos="fade-up">
      <span class="inline-block px-4 py-1 text-sm font-medium text-forlux-green-primary bg-forlux-green-primary/10 rounded-full border border-forlux-green-primary/20 mb-4" id="features-subtitle">
        {content.subtitle}
      </span>
      <h2 class="text-4xl font-bold mb-4 bg-clip-text text-transparent bg-forlux-green-gradient" id="features-title">
        {content.title}
      </h2>
      <p class="text-gray-400 max-w-2xl mx-auto" id="features-description">
        {content.description}
      </p>
    </div>

    <!-- Core Features -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
      {content.coreFeatures.map((feature, index) => (
        <div 
          class="glass-card p-6"
          data-aos="fade-up"
          data-aos-delay={index * 100}
        >
          <span class="text-3xl mb-4 block">{feature.icon}</span>
          <h3 class="text-xl font-bold mb-2 text-forlux-green-primary" id={`feature-${index}-title`}>
            {feature.title}
          </h3>
          <p class="text-gray-400 mb-4 text-sm" id={`feature-${index}-description`}>
            {feature.description}
          </p>
          <ul class="space-y-2">
            {feature.details.map((detail, detailIndex) => (
              <li 
                class="flex items-center text-sm text-gray-400"
                data-aos="fade-left"
                data-aos-delay={300 + (detailIndex * 100)}
                id={`feature-${index}-detail-${detailIndex}`}
              >
                <span class="w-1.5 h-1.5 bg-forlux-green-primary rounded-full mr-2"></span>
                {detail}
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>

    <!-- Certifications -->
    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-12" data-aos="fade-up">
        <h3 class="text-2xl font-bold mb-4 bg-clip-text text-transparent bg-forlux-orange-gradient" id="certifications-title">
          {content.certifications.title}
        </h3>
        <p class="text-gray-400" id="certifications-description">
          {content.certifications.description}
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        {content.certifications.items.map((cert, index) => (
          <div 
            class="glass-card p-6 text-center"
            data-aos="zoom-in"
            data-aos-delay={index * 100}
          >
            <span class="text-3xl mb-4 block">{cert.icon}</span>
            <div class="text-2xl font-bold text-forlux-orange-primary mb-2" id={`cert-${index}-value`}>
              {cert.value}
            </div>
            <h4 class="text-sm font-semibold text-white mb-2" id={`cert-${index}-title`}>{cert.title}</h4>
            <p class="text-xs text-gray-400" id={`cert-${index}-description`}>{cert.description}</p>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>
<script>
  import { currentLanguage } from '../stores/languageStore';
  import { translations } from '../utils/translations';

  function updateContent(lang) {
    const content = translations[lang].products.features;

    // Update main content
    document.getElementById('features-subtitle').textContent = content.subtitle;
    document.getElementById('features-title').textContent = content.title;
    document.getElementById('features-description').textContent = content.description;

    // Update features
    content.coreFeatures.forEach((feature, index) => {
      document.getElementById(`feature-${index}-title`).textContent = feature.title;
      document.getElementById(`feature-${index}-description`).textContent = feature.description;
      feature.details.forEach((detail, detailIndex) => {
        document.getElementById(`feature-${index}-detail-${detailIndex}`).textContent = detail;
      });
    });

    // Update certifications
    document.getElementById('certifications-title').textContent = content.certifications.title;
    document.getElementById('certifications-description').textContent = content.certifications.description;

    content.certifications.items.forEach((cert, index) => {
      document.getElementById(`cert-${index}-value`).textContent = cert.value;
      document.getElementById(`cert-${index}-title`).textContent = cert.title;
      document.getElementById(`cert-${index}-description`).textContent = cert.description;
    });
  }

  function initFeatures() {
    const unsubscribe = currentLanguage.subscribe(newLang => {
      updateContent(newLang);
    });
    return unsubscribe;
  }

  document.addEventListener('astro:page-load', () => {
    const unsubscribe = initFeatures();
    document.addEventListener('astro:before-preparation', () => {
      unsubscribe();
    }, { once: true });
  });
</script>
