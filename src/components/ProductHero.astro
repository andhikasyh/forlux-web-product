---
import { currentLanguage } from '../stores/languageStore';
import { translations } from '../utils/translations';

// Initial language value for SSR
const initialLang = currentLanguage.get();
---

<section class="relative min-h-[40vh] flex items-center justify-center py-32 overflow-hidden" id="product-hero">
  <!-- Background Effects -->
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-gradient-radial from-forlux-orange-primary/20 to-transparent opacity-30 blur-3xl"></div>
  </div>

  <!-- Main Content -->
  <div class="container relative z-10 px-4 mx-auto">
    <div class="text-center max-w-4xl mx-auto">
      <div class="mb-6" data-aos="fade-down">
        <span 
          class="inline-block px-4 py-2 text-sm font-medium text-forlux-orange-primary bg-forlux-orange-primary/10 rounded-full border border-forlux-orange-primary/20"
          id="hero-label"
        >
          Discover Our Products
        </span>
      </div>

      <h1 
        class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-white"
        data-aos="fade-up"
        data-aos-delay="100"
      >
        <span 
          class="bg-clip-text text-transparent bg-forlux-orange-gradient"
          id="hero-title-1"
        >
          Smart Traffic Solutions
        </span>
        <br />
        <span id="hero-title-2">for Modern Cities</span>
      </h1>

      <p 
        class="text-lg text-gray-400 mb-8 max-w-2xl mx-auto leading-relaxed"
        data-aos="fade-up"
        data-aos-delay="200"
        id="hero-description"
      >
        Experience the future of traffic management with our comprehensive suite of intelligent solutions, proudly engineered and manufactured in Indonesia.
      </p>
    </div>
  </div>

  <!-- Animated Traffic Elements -->
  <div class="absolute inset-0 pointer-events-none overflow-hidden">
    <!-- Traffic Grid Lines -->
    <div class="traffic-grid absolute inset-0 opacity-20"></div>
    
    <!-- Animated Dots (representing traffic/data flow) -->
    <div class="data-flow-container">
      {Array(10).fill(0).map((_, i) => (
        <div class={`data-point data-point-${i}`}></div>
      ))}
    </div>

    <!-- Connection Lines -->
    <svg class="absolute inset-0 w-full h-full connection-lines opacity-20">
      <path class="connection-path" d="M0 0" />
    </svg>
  </div>
</section>

<!-- Replace the Product Showcase section -->
<div class="container mx-auto px-4 py-24 relative z-10">
  <!-- Product Grid with Alternating Layout -->
  <div class="space-y-32">
    <!-- Product 1 -->
    <div 
      class="group relative flex flex-col md:flex-row items-center gap-12"
      data-aos="fade-right"
    >
      <!-- Image Section -->
      <div class="w-full md:w-1/2 relative">
        <div class="absolute -inset-4 bg-gradient-to-r from-forlux-orange-primary/20 to-transparent rounded-3xl blur-2xl opacity-0 group-hover:opacity-100 transition-all duration-700"></div>
        <img 
          src="/forlux-panel-1.png" 
          alt="Forlux Control Panel" 
          class="w-full h-auto transform group-hover:scale-105 transition-all duration-700 relative z-10"
        />
      </div>

      <!-- Content Section -->
      <div class="w-full md:w-1/2 space-y-6 text-left">
        <h3 class="text-3xl font-bold">
          <span class="bg-clip-text text-transparent bg-gradient-to-r from-forlux-orange-primary to-forlux-orange-secondary">
            {translations[initialLang].products.items.panel.title}
          </span>
        </h3>
        <p class="text-gray-400 text-lg leading-relaxed">
          {translations[initialLang].products.items.panel.description}
        </p>
        <div class="flex gap-4 pt-4">
          <span class="px-4 py-2 rounded-full bg-forlux-orange-primary/10 text-forlux-orange-primary text-sm">
            Advanced Control
          </span>
          <span class="px-4 py-2 rounded-full bg-forlux-orange-primary/10 text-forlux-orange-primary text-sm">
            Modular Design
          </span>
        </div>
      </div>
    </div>

    <!-- Product 2 -->
    <div 
      class="group relative flex flex-col-reverse md:flex-row-reverse items-center gap-12"
      data-aos="fade-left"
    >
      <!-- Image Section with Size Constraints -->
      <div class="w-full md:w-1/2 relative flex justify-center">
        <div class="absolute -inset-4 bg-gradient-to-l from-forlux-green-primary/20 to-transparent rounded-3xl blur-2xl opacity-0 group-hover:opacity-100 transition-all duration-700"></div>
        <img 
          src="/luminox.png" 
          alt="Luminox System" 
          class="w-auto h-auto max-w-[80%] md:max-w-[70%] transform group-hover:scale-105 transition-all duration-700 relative z-10"
        />
      </div>

      <!-- Content Section -->
      <div class="w-full md:w-1/2 space-y-6 text-left">
        <h3 class="text-3xl font-bold">
          <span class="bg-clip-text text-transparent bg-gradient-to-r from-forlux-green-primary to-forlux-green-secondary">
            {translations[initialLang].products.items.luminox.title}
          </span>
        </h3>
        <p class="text-gray-400 text-lg leading-relaxed">
          {translations[initialLang].products.items.luminox.description}
        </p>
        <div class="flex gap-4 pt-4">
          <span class="px-4 py-2 rounded-full bg-forlux-green-primary/10 text-forlux-green-primary text-sm">
            Energy Efficient
          </span>
          <span class="px-4 py-2 rounded-full bg-forlux-green-primary/10 text-forlux-green-primary text-sm">
            Smart Control
          </span>
        </div>
      </div>
    </div>

    <!-- Product 3 -->
    <div 
      class="group relative flex flex-col md:flex-row items-center gap-12"
      data-aos="fade-right"
    >
      <!-- Image Section with Adjusted Size -->
      <div class="w-full md:w-1/2 relative flex justify-center">
        <div class="absolute -inset-4 bg-gradient-to-r from-forlux-orange-secondary/20 to-transparent rounded-3xl blur-2xl opacity-0 group-hover:opacity-100 transition-all duration-700"></div>
        <img 
          src="/SmartView.png" 
          alt="SmartView Interface" 
          class="w-auto h-auto max-w-[85%] md:max-w-[75%] transform group-hover:scale-105 transition-all duration-700 relative z-10"
        />
      </div>

      <!-- Content Section -->
      <div class="w-full md:w-1/2 space-y-6 text-left">
        <h3 class="text-3xl font-bold">
          <span class="bg-clip-text text-transparent bg-gradient-to-r from-forlux-orange-secondary to-forlux-orange-accent">
            {translations[initialLang].products.items.SmartView.title}
          </span>
        </h3>
        <p class="text-gray-400 text-lg leading-relaxed">
          {translations[initialLang].products.items.SmartView.description}
        </p>
        <div class="flex gap-4 pt-4">
          <span class="px-4 py-2 rounded-full bg-forlux-orange-secondary/10 text-forlux-orange-secondary text-sm">
            Real-time Analytics
          </span>
          <span class="px-4 py-2 rounded-full bg-forlux-orange-secondary/10 text-forlux-orange-secondary text-sm">
            Intuitive UI
          </span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .traffic-grid {
    background-image: linear-gradient(90deg, rgba(255,255,255,.1) 1px, transparent 1px),
                      linear-gradient(rgba(255,255,255,.1) 1px, transparent 1px);
    background-size: 50px 50px;
  }

  .data-point {
    @apply absolute w-2 h-2 rounded-full bg-forlux-orange-primary/60;
    filter: blur(1px);
  }

  .connection-path {
    fill: none;
    stroke: rgba(255, 255, 255, 0.2);
    stroke-width: 1;
  }

  .mix-blend-lighten {
    mix-blend-mode: lighten;
  }
</style>

<script>
  import { currentLanguage } from '../stores/languageStore';
  import { translations } from '../utils/translations';
  import gsap from 'gsap';

  function initAnimations() {
    // Create traffic flow animation
    const dataPoints = document.querySelectorAll('.data-point');
    
    dataPoints.forEach((point, index) => {
      // Random starting positions
      gsap.set(point, {
        x: gsap.utils.random(0, window.innerWidth),
        y: gsap.utils.random(0, window.innerHeight),
      });

      // Animate each point
      gsap.to(point, {
        duration: gsap.utils.random(3, 6),
        x: `+=${gsap.utils.random(-300, 300)}`,
        y: `+=${gsap.utils.random(-300, 300)}`,
        opacity: gsap.utils.random(0.2, 0.6),
        scale: gsap.utils.random(0.8, 1.5),
        repeat: -1,
        yoyo: true,
        ease: "none",
        delay: index * 0.2
      });
    });

    // Animate grid
    gsap.to('.traffic-grid', {
      backgroundPosition: '50px 50px',
      duration: 20,
      repeat: -1,
      ease: "none"
    });

    // Create connection lines animation
    const connectionPath = document.querySelector('.connection-path');
    const points = [];
    
    // Generate random connection points
    for (let i = 0; i < 5; i++) {
      points.push({
        x: gsap.utils.random(0, window.innerWidth),
        y: gsap.utils.random(0, window.innerHeight)
      });
    }

    // Create path string
    const pathString = points.reduce((acc, point, i) => {
      return `${acc}${i === 0 ? 'M' : 'L'}${point.x},${point.y}`;
    }, '');

    // Set and animate path
    gsap.set(connectionPath, { attr: { d: pathString + 'Z' } });
    gsap.to(connectionPath, {
      strokeDashoffset: 1000,
      strokeDasharray: 1000,
      duration: 10,
      repeat: -1,
      ease: "none"
    });

    // Animate content entrance
    const tl = gsap.timeline({ defaults: { ease: "power3.out" } });

    tl.from('#hero-label', {
      y: 30,
      opacity: 0,
      duration: 0.8
    })
    .from('#hero-title-1, #hero-title-2', {
      y: 50,
      opacity: 0,
      stagger: 0.2,
      duration: 0.8
    }, "-=0.4")
    .from('#hero-description', {
      y: 30,
      opacity: 0,
      duration: 0.8
    }, "-=0.4");
  }

  function updateContent(lang) {
    const t = translations[lang].products.hero;

    // Update content
    document.getElementById('hero-label').textContent = t.label;
    document.getElementById('hero-title-1').textContent = t.title1;
    document.getElementById('hero-title-2').textContent = t.title2;
    document.getElementById('hero-description').textContent = t.description;
  }

  function initProductHero() {
    // Initial content update
    updateContent(currentLanguage.get());

    // Initialize animations
    initAnimations();

    // Language change subscription
    const unsubscribe = currentLanguage.subscribe(newLang => {
      updateContent(newLang);
    });

    return unsubscribe;
  }

  // Handle initial load and page transitions
  document.addEventListener('astro:page-load', () => {
    const unsubscribe = initProductHero();
    
    document.addEventListener('astro:before-preparation', () => {
      // Kill all GSAP animations before page transition
      gsap.killTweensOf('.data-point');
      gsap.killTweensOf('.traffic-grid');
      gsap.killTweensOf('.connection-path');
      unsubscribe();
    }, { once: true });
  });
</script>